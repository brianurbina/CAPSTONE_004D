# Generated by Django 5.1.1 on 2024-11-07 22:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('direccion', models.CharField(max_length=255)),
                ('telefono', models.CharField(max_length=20)),
                ('foto_perfil', models.ImageField(blank=True, default='img/nofoto.jpg', null=True, upload_to='perfiles/')),
                ('descripcion', models.TextField(blank=True)),
                ('facebook', models.URLField(default='https://www.facebook.com/')),
                ('instagram', models.URLField(default='https://www.instagram.com/')),
                ('linkedin', models.URLField(default='https://www.linkedin.com/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('id_conversacion', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('usuario1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversaciones_iniciadas', to=settings.AUTH_USER_MODEL)),
                ('usuario2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversaciones_recibidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('usuario1', 'usuario2')},
            },
        ),
        migrations.CreateModel(
            name='Donacion',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('titulo', models.CharField(max_length=100)),
                ('tipo_ropa', models.CharField(max_length=50)),
                ('talla', models.CharField(max_length=20)),
                ('temporada', models.CharField(max_length=20)),
                ('descripcion', models.TextField()),
                ('foto', models.ImageField(upload_to='donaciones/')),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('en_proceso', 'En proceso'), ('donado', 'Donado')], max_length=20)),
                ('receptor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donaciones_recibidas', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donaciones', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fundacion',
            fields=[
                ('rut', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('razon_social', models.CharField(max_length=100)),
                ('comuna_region', models.CharField(choices=[('', 'Seleccione una opción'), ('Región Metropolitana', [('santiago', 'Santiago'), ('maipu', 'Maipú'), ('providencia', 'Providencia'), ('las_condes', 'Las Condes'), ('Ñuñoa', 'Ñuñoa'), ('vitacura', 'Vitacura'), ('la_florida', 'La Florida'), ('peñalolen', 'Peñalolén'), ('el_bosque', 'El Bosque'), ('la_reina', 'La Reina')]), ('Región de Valparaíso', [('valparaiso', 'Valparaíso'), ('viña_del_mar', 'Viña del Mar'), ('quillota', 'Quillota'), ('san_antonio', 'San Antonio'), ('san_felipe', 'San Felipe'), ('villa_alegre', 'Villa Alegre'), ('almargen', 'Almargen')]), ('Región de Coquimbo', [('la_serena', 'La Serena'), ('coquimbo', 'Coquimbo'), ('combarbalá', 'Combarbalá'), ('illapel', 'Illapel'), ('andacollo', 'Andacollo'), ('punitaqui', 'Punitaqui')]), ('Región de Antofagasta', [('antofagasta', 'Antofagasta'), ('calama', 'Calama'), ('mejillones', 'Mejillones'), ('tocopilla', 'Tocopilla'), ('sierra_gorda', 'Sierra Gorda')]), ('Región de Atacama', [('copiapo', 'Copiapó'), ('vallenar', 'Vallenar'), ('chilecito', 'Chilecito'), ('caldera', 'Caldera'), ('huasco', 'Huasco')]), ('Región de Araucanía', [('temuco', 'Temuco'), ('angol', 'Angol'), ('villarrica', 'Villarrica'), ('pitrufquén', 'Pitrufquén'), ('freire', 'Freire')]), ('Región de Los Ríos', [('valdivia', 'Valdivia'), ('la_union', 'La Unión'), ('rio_negro', 'Río Negro'), ('corral', 'Corral'), ('los_lagos', 'Los Lagos')]), ('Región de Los Lagos', [('osorno', 'Osorno'), ('puerto_montt', 'Puerto Montt'), ('castro', 'Castro'), ('ancud', 'Ancud'), ('puyehue', 'Puyehue')]), ('Región de Magallanes', [('punta_arenas', 'Punta Arenas'), ('porvenir', 'Porvenir'), ('cabo_de_hornos', 'Cabo de Hornos'), ('primavera', 'Primavera')])], default='', max_length=50)),
                ('direccion', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
                ('telefono', models.CharField(max_length=20)),
                ('logotipo', models.ImageField(blank=True, default='img/nofoto.jpg', null=True, upload_to='fundaciones/')),
                ('sitio_web', models.URLField(blank=True)),
                ('aprobada', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dueño', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id_mensaje', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('mensaje', models.TextField()),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('conversacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='aplicacion.conversacion')),
                ('emisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_enviados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Peticion',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('titulo', models.CharField(max_length=100)),
                ('tipo_ropa', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('en_proceso', 'En proceso'), ('completada', 'Completada')], max_length=20)),
                ('donador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donaciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peticiones', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReporteUsuario',
            fields=[
                ('id_reporte', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('motivo', models.CharField(choices=[('SPAM', 'Spam'), ('ACOSO', 'Acoso'), ('CONTENIDO_INAPROPIADO', 'Contenido Inapropiado'), ('OTRO', 'Otro')], max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('REVISADO', 'Revisado'), ('RESUELTO', 'Resuelto'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=20)),
                ('resultado', models.CharField(max_length=250)),
                ('usuario_reportado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_recibidos', to=settings.AUTH_USER_MODEL)),
                ('usuario_reportante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_realizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte de Usuario',
                'verbose_name_plural': 'Reportes de Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Reseña',
            fields=[
                ('id_resena', models.UUIDField(primary_key=True, serialize=False)),
                ('estrellas', models.IntegerField(blank=True, default=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('reseña', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('remitente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dueñoreseña', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dueñoperfil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
